-################################ HEADER / LAYOUT STUFF ################################
-# Sanitize everything in the head so that no javascript gets put in there.  However an admin will have javascript rendered for the rest of the page, while a user will not.
-# This fixes potential problems for XSS attacks.
- content_for :title, "#{sanitize(@activity.title)} | #{@activity_type_title}".html_safe
- content_for :description, sanitize(@activity.meta_description).html_safe
- content_for :canonical_link, activity_url(@activity) if @activity.id
- content_for :keywords, sanitize(@activity.tag_list.join(','))
-# Don't have google index UGC. This is an experiment to see if it hurts our SEO
-# before we consider a more radical move of cutting out UGC completely.
-if @activity.read_attribute(:creator) != 0
  - content_for :extra_head_tags, '<META NAME="ROBOTS" CONTENT="NOINDEX">'.html_safe
- if @activity.id
  - content_for :facebook_og do
    %meta{property: 'og:url', content: activity_url(@activity)}
    %meta{property: 'og:title', content: sanitize(@activity.title).html_safe}
    %meta{property: 'og:description', content: sanitize(@activity.meta_description).html_safe}
    - if @activity.image_id?
      %meta{property: 'og:image', content: filepicker_activity_hero_image(@activity.image_id)}
    - elsif @activity.featured_image_id?
      %meta{property: 'og:image', content: filepicker_activity_hero_image(@activity.featured_image_id)}
  - content_for :twitter_cards do
    %meta{property: 'twitter:site', content: '@chefsteps'}
    %meta{property: 'twitter:title', content: sanitize(@activity.title).html_safe }
    %meta{property: 'twitter:description', content: sanitize(@activity.meta_description).html_safe}
    - if @activity.image_id?
      %meta{property: 'twitter:image:src', content: filepicker_activity_hero_image(@activity.image_id)}
    - elsif @activity.featured_image_id?
      %meta{property: 'twitter:image:src', content: filepicker_activity_hero_image(@activity.featured_image_id)}
    - if @activity.youtube_id?
      %meta{property: 'twitter:card', content: 'player'}
      %meta{property: 'twitter:player', content: "https://www.youtube.com/embed/#{@activity.youtube_id}?wmode=opaque\&rel=0&modestbranding=1\&showinfo=0"}
      %meta{property: 'twitter:player:height', content: '270'}
      %meta{property: 'twitter:player:width', content: '480'}
    - else
      %meta{property: 'twitter:card', content: 'summary_large_image'}

- @body_tag_attributes = {:'ng-app' => "ChefStepsApp", :'ng-controller' => "ActivityController", :'ng-class' => '{"activity_show" : true}' }

-# This is how search engine crawlers know to request the _escaped_fragment_ page
-# Temporary: leave these two activities out of _escaped_fragment_ / brombone so we can experiment
-# with how Google crawls the angular DOM. Picked these two b/c romesco currently does have an image in
-# SERP for [site:chefsteps.com/activities] and mint-gelle does not.

- unless @activity.slug == 'romesco' || @activity.slug == 'mint-gelee'
  - content_for :ajax_seo do
    %meta{name: "fragment", content: "!"}

-if params[:scaling]
  :javascript
    paramScaling = #{params[:scaling]};


-################################ PRIMARY CONTENT ################################
-# Sous Vide CTA: don't show madlib for sous vide steak
-if ! is_brombone && @activity.id != 29
  .container-fluid.well-gradient.full-bleed.no-bottom-margin(ng-controller="LoginController" ng-show="!authentication.currentUser()" ng-cloak ng-init="registrationSource='activityMadlib'; setIntent('ftue')")
    = render "devise/sessions/new_angular"
    .row-fluid
      .container
        .row
          .span10.offset1.relative
            = render 'home/madlib'

.schema-container
  %script(type="application/ld+json" ng-if="shouldIncludeJSONLD()" ng-bind-html="getJSONLD()")

  .recipe-container

    = render 'activities/banner_image'

    .banner-spacer.noprint( ng-if="heroMedia.heroDisplayType() == 'none'" )

    .comments-slide(ng-class="{'open' : anyCommentsOpen}")
      #activity-title(data-activity="#{@activity.title}")
      %form.printable(ng-cloak name="activityForm" csfixnakedlinks)

        -# dummy default button so no way a default click on some other button happens when return is pressed in a text field
        %input(ng-click="" type="submit" style="height: 0px !important; width:0px !important; margin-left: -10000px;")

        #activity-body(ng-class="addEditModeClass()"){data: {:'activity-id' => @activity.id}}
          = render 'activities/main_activity_content', activity: @activity

  %div(nell-popup)

  -################################ BOTTOM OF PAGE CONTENT ################################

  - if @course.blank?
    = render 'discovery_footer'

  - content_for :bottom do
    - if ! ENV["CS_NO_DISQUS"]
      .row.section
        .span8.offset2
          %h3 Comments
          #discussion
            %cscomments(comments-type="activity" comments-id="{{activity.id}}" seo-bot="#{is_brombone}")


  = content_for :footer do
    = render 'layouts/footer'

  = render 'home/madlib_popup', registration_source: 'activityMadlib'


  -################################ MODALS  ################################

  - if @course
    .modal.hide.fade#syllabus-modal
      .modal-header
        = button_tag "X", class: 'close', data: {dismiss:'modal'}
        %h3= @course.title
      .modal-body
        = course_syllabus(@course)

  = render 'cancel_edit_modal'
  = render 'restore_autosave.html.haml'
  = render 'already_editing_modal.html.haml'


  -################################ PRELOADED JSON FOR SPEED ################################

  #preloaded-activity-json.hide
    = @activity.to_json

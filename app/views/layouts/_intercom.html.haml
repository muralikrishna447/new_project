- if current_user
  :javascript
    window.intercomSettings = {
      "app_id": "#{intercom_app_id}",
      "name": "#{current_user.name}",
      "email": "#{current_user.email}",
      "user_id": "#{current_user.id}",
      "created_at": "#{current_user.created_at.to_time.to_i}",
      "user_hash": "#{intercom_user_hash(current_user)}",
      "location": "#{current_user.location}",
      "website": "#{current_user.website}",
      "chef_type": "#{current_user.chef_type}",
      "website": "#{current_user.website}",
      "role": "#{current_user.role}",
      "paid_classes" : #{current_user.enrollments.where('price > 0').count},
      "free_classes" : #{current_user.enrollments.where(price: 0).count},
      "uploads" : #{current_user.uploads.count},
      "recipes_created" : #{current_user.created_activities.count},
      "recipes_published" : #{current_user.created_activities.published.count}
    };
- else
  :javascript
    // Setting this here so we can use it later in login_controller.js
    window.intercomAppId = "#{intercom_app_id}"

:javascript
  (function() {
      var w = window;
      var ic = w.Intercom;
      if (typeof ic === "function") {
          ic('reattach_activator');
          ic('update', intercomSettings);
      } else {
          var d = document;
          var i = function() {
              i.c(arguments)
          };
          i.q = [];
          i.c = function(args) {
              i.q.push(args)
          };
          w.Intercom = i;

          function l() {
              var s = d.createElement('script');
              s.type = 'text/javascript';
              s.async = true;
              s.src = "https://widget.intercom.io/widget/#{intercom_app_id}";
              var x = d.getElementsByTagName('script')[0];
              x.parentNode.insertBefore(s, x);
          }
          if (w.attachEvent) {
              w.attachEvent('onload', l);
          } else {
              // mnatkin 10/14/14 - something about Bloom.installComments is keeping this
              // event from firing. So I am using setTimeout instead.
              // w.addEventListener('load', l, false);
              setTimeout(l, 1000);
          }
      }
  })()
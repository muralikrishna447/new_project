- if current_user
  - intercom_app_id = 'pqm08zug'
  - intercom_secret = 'TXpMDZMi8_y5HVUNzfveHtWTEVFys9iF8tSurskP'
  - if Rails.env.production?
    - intercom_app_id = 'vy04t2n1'
    - intercom_secret = 'nm4NWnIuoxEtq3Dlwlupnv1BucWzAhHGfBHDBYMh'
  :javascript
    window.intercomSettings = {
      "name": "#{current_user.name}",
      "email": "#{current_user.email}",
      "user_id": "#{current_user.id}",
      "created_at": "#{current_user.created_at.to_time.to_i}",
      "app_id": "#{intercom_app_id}",
      "user_hash": "#{Digest::HMAC.hexdigest(current_user.id.to_s, intercom_secret, Digest::SHA256)}",
      "location": "#{current_user.location}",
      "website": "#{current_user.website}",
      "chef_type": "#{current_user.chef_type}",
      "website": "#{current_user.website}",
      "role": "#{current_user.role}",
      "paid_classes" : #{current_user.enrollments.where('price > 0').count},
      "free_classes" : #{current_user.enrollments.where(price: 0).count}
    };

  :javascript
    (function() {
        var w = window;
        var ic = w.Intercom;
        if (typeof ic === "function") {
            ic('reattach_activator');
            ic('update', intercomSettings);
        } else {
            var d = document;
            var i = function() {
                i.c(arguments)
            };
            i.q = [];
            i.c = function(args) {
                i.q.push(args)
            };
            w.Intercom = i;

            function l() {
                var s = d.createElement('script');
                s.type = 'text/javascript';
                s.async = true;
                s.src = 'https://widget.intercom.io/widget/vy04t2n1';
                var x = d.getElementsByTagName('script')[0];
                x.parentNode.insertBefore(s, x);
            }
            if (w.attachEvent) {
                w.attachEvent('onload', l);
            } else {
                // mnatkin 10/14/14 - something about Bloom.installComments is keeping this
                // event from firing. So I am using setTimeout instead.
                // w.addEventListener('load', l, false);
                setTimeout(l, 1000);
            }
        }
    })()
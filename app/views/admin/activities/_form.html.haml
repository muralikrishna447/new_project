= render 'layouts/filepicker'
-all_ingredients = Ingredient.all.map { |i| i.sub_activity_id? ? "#{i.title} [RECIPE]" : i.title}.select { |i| i != nil}.sort
%div#allingredients{data: {allingredients: all_ingredients.to_json}}

:ruby
  field_name_prefix = "activity[steps][]"

.well
  %h1(style="color: red;") Wait Just A Second There, Buddy
  %h3
    You can still create or edit the recipe here, but if at all possible please use
    =link_to "front-end edit mode", @activity.id ? activity_path(@activity) : '/activities/new'
    instead. Grab Michael if you need any assistance or find bugs.

/ The Update Warning class will prompt the user to save the recipe before leaving the page
.update-warning
= semantic_form_for [:admin, @activity], validate: true do |f|
  = f.inputs name: "Activity Details" do
    = f.input :include_in_gallery, as: :boolean
    = f.input :premium, label: "Premium Only"
    = f.input :published
    = f.input :is_promoted, as: :boolean, input_html: { checked: @activity.has_promoted? }
    = f.input :promote_order, label: "Promoted order",
                              wrapper_html: { class: @activity.has_promoted? ? '' : 'hide' },
                              input_html: { min: 1, value: @activity.promote_order.presence || 1 }
    = f.input :title
    %li
      = f.label "Activity Type", class: "label"
      - Activity::TYPES.each do |type|
        %label
          = check_box_tag :activity_type, type, @activity.activity_type.include?(type), :name => 'activity[activity_type][]'
          = type
    %div#alltags{data: {alltags: ActsAsTaggableOn::Tag.all.map(&:name) }, style: 'clear: both;'}
    = f.input :tag_list, as: :select, collection: ActsAsTaggableOn::Tag.all.map(&:name), multiple: true
    = f.input :description, label: "Description (Markdown or HTML)"
    = f.input :youtube_id
    %li
      = render '/shared/filepicker_group', label_text: "Hero Image", param: "activity[image_id]", value: @activity.image_id
    %li
      = render '/shared/filepicker_group', label_text: "Featured Image", param: "activity[featured_image_id]", value: @activity.featured_image_id
    = f.input :transcript
    = f.input :timing
    = f.input :difficulty, as: :select, collection: Activity.difficulty_enum
    = f.input :yield
    = f.input :child_activities, as: :select, collection: Activity.published.recipes, multiple: true

  = section("Ingredients", f) do
    .ingredient-table-div
      = sortable_table('ingredients') do
        %colgroup
          %col.ingredient
          %col.note
          %col.quantity
          %col.unit
          %col.actions
        %tbody
          %tr
            %th.ingredient Ingredient
            %th.note Note
            %th.quantity Quantity
            %th.unit Unit
            %th
          = render 'ingredient_form', ingredient: nil
          - @activity.ingredients.ordered.each do |ingredient|
            = render 'ingredient_form', ingredient: ingredient
    %li#copy-ingredient-button= copy_button 'Add Ingredient', '#ingredient-row', 'table#ingredients'

  = section("Equipment", f) do
    %li= copy_button('Add Equipment', '#equipment-row', 'table#equipment')
    = sortable_table('equipment') do
      %tr
        %th Title
        %th Optional?
        %th
      = render 'equipment_form', equipment: nil
      - @activity.equipment.ordered.each do |equipment|
        = render 'equipment_form', equipment: equipment

  = section("Steps", f) do
    %li.two-button-row
      = copy_button 'Add Step', '#step-row', 'table#steps', 'stepCopied'
      - unless @activity.id.nil?
        = admin_button 'Edit ingredients associated with steps', associated_ingredients_admin_activity_path(@activity)
    = sortable_table('steps') do
      %colgroup
        %col.title
        %col.directions
        %col.media
        %col.actions
      %tr
        %th Title
        %th Directions (Markdown or HTML)
        %th Media
      = render 'step_form', step: nil, field_name_prefix: field_name_prefix
      - @activity.ordered_steps.each do |step|
        = render 'step_form', step: step, field_name_prefix: field_name_prefix
    %li.two-button-row
      = copy_button 'Add Step', '#step-row', 'table#steps', 'stepCopied'
      - unless @activity.id.nil?
        = admin_button 'Edit ingredients associated with steps', associated_ingredients_admin_activity_path(@activity)

  = f.actions do
    = f.action :submit
    = f.action :cancel, wrapper_html: {class: :cancel}, label: 'Cancel'


require 'csv'
require 'optparse'
require 'date'

#
# Takes a CSV from the output of the 'validate_shopify_orders' script and
# sorts it (in FIFO order of placement).
#
# The output of this script is the sorted CSV input.
#
# Options:
#   --file: The input CSV file generated by the 'validate_shopify_export' script.
#

# Options parsing
options = {}
option_parser = OptionParser.new do |option|
  option.on('-f', '--file FILE', 'CSV export file of Shopify orders') do |file|
    options[:file] = file
  end
end

option_parser.parse!
raise '--file is required' unless options[:file]

order_rows = []
CSV.foreach(options[:file], headers: true) do |input_row|
  input_row['processed_at'] = DateTime.parse(input_row['processed_at'])
  order_rows << input_row
end

# Sort by order processing time, ascending
order_rows.sort! do |x, y|
  x['processed_at'] <=> y['processed_at']
end

# TODO insert logic for bumping orders to the top given a prioirity list
# TODO insert logic for filtering orders given a blacklist

output_str = CSV.generate(force_quotes: true) do |output_rows|
  output_rows << [
    'id',
    'name',
    'processed_at',
    'shipping_name',
    'shipping_address_1',
    'shipping_address_2',
    'shipping_city',
    'shipping_province',
    'shipping_zip',
    'shipping_country',
    'email',
    'shipping_phone',
    'sku',
    'quantity'
  ]
  order_rows.each { |row| output_rows << row }
end

puts output_str

STDERR.puts "Sorted #{order_rows.length} orders"
